syntax = "proto3";

option csharp_namespace = "UVFYMetadatos";

package metadata;

service Metadata {
  rpc CargarCancionesTodas (Token) returns (RespuestaDeCanciones);
  rpc CargarCancionPorId (PeticionId) returns (RespuestaDeCanciones);
  rpc CargarCancionesPorIdArtista (PeticionId) returns (RespuestaDeCanciones);
  rpc CargarCancionesPorIdAlbum (PeticionId) returns (RespuestaDeCanciones);
  rpc CargarCancionesPorIdPlaylist (PeticionId) returns (RespuestaDeCanciones);
  rpc CargarCancionesPorIdGenero (PeticionId) returns (RespuestaDeCanciones);
  rpc CargarCancionesPrivadasPorIdArtista (PeticionId) returns (RespuestaDeCanciones);
  rpc RegistrarCancionDeArtista (SolicitudDeRegistrarCancion) returns (RespuestaDeCanciones);
  rpc RegistrarCancionDeConsumidor (SolicitudDeRegistrarCancion) returns (RespuestaDeCanciones);
  rpc EliminarCancion (SolicitudDeEliminarCancion) returns (Respuesta);
  rpc LiberarCancion (SolicitudDeCambiarEstadoDeCancion) returns (Respuesta);
  rpc PrivatizarCancion (SolicitudDeCambiarEstadoDeCancion) returns (Respuesta);

  rpc CargarArtistasTodos (Token) returns (RespuestaDeArtista);
  rpc CargarArtistaPorId (PeticionId) returns (RespuestaDeArtista);
  rpc CargarArtistaPorIdCancion (PeticionId) returns (RespuestaDeArtista);
  rpc CargarArtistaPorIdAlbum (PeticionId) returns (RespuestaDeArtista);

  rpc CargarAlbumPorId (PeticionId) returns (RespuestaDeAlbum);
  rpc CargarAlbumPorIdCancion (PeticionId) returns (RespuestaDeAlbum);
  rpc CargarAlbumesPorIdArtista (PeticionId) returns (RespuestaDeAlbum);
  rpc CargarAlbumesPorIdGenero (PeticionId) returns (RespuestaDeAlbum);
  rpc RegistrarAlbum (SolicitudDeRegistrarAlbum) returns (RespuestaDeAlbum);
  rpc AgregarCancionAAlbum (SolicitudDeAgregarCancionAPlaylist) returns (Respuesta);
  rpc EliminarCancionDeAlbum (SolicitudDeEliminarCancionDePlaylist) returns (Respuesta);
  rpc EliminarAlbum (SolicitudDeEliminarAlbum) returns (Respuesta);

  rpc CargarPlaylistPorId (PeticionId) returns (RespuestaDePlaylist);
  rpc CargarPlaylistsPorIdUsuario (PeticionId) returns (RespuestaDePlaylist);

  rpc CargarGenerosTodos (Token) returns (RespuestaDeGenero);
  rpc CargarGeneroPorid (PeticionId) returns (RespuestaDeGenero);

  rpc RegistrarPlaylist (SolicitudDeAgregarPlaylist) returns (RespuestaDePlaylist);
  rpc AgregarCancionAPlaylist (SolicitudDeAgregarCancionAPlaylist) returns (Respuesta);
  rpc EliminarCancionDePlaylist (SolicitudDeEliminarCancionDePlaylist) returns (Respuesta);
  rpc RenombrarPlaylist (SolicitudDeRenombrarPlaylist) returns (Respuesta);
  rpc EliminarPlaylist (SolicitudDeEliminarPlaylist) returns (Respuesta);
}

message SolicitudDeCambiarEstadoDeCancion{
  Token token = 1; 
  int32 idCancion = 2; 
}
 
message RespuestaDeGenero{
  Respuesta Respuesta = 1;
  repeated Genero generos = 2;
}

message SolicitudDeEliminarCancion {
  Token token = 1; 
  int32 idCancion = 2; 
}
 
message SolicitudDeRegistrarCancion {
  Token token = 1; 
  string nombre = 2;
  repeated int32 generos = 3;
  bytes audio = 4;
  bytes imagen = 5;
  int32 duracion = 6;
}

message SolicitudDeEliminarAlbum{
  Token token = 1; 
  int32 idAlbum = 2;
}

message SolicitudDeRegistrarAlbum {
  Token token = 1; 
  string nombre = 2; 
  string descripcion = 3; 
  repeated int32 generos = 4;
  bytes imagen = 5;
}

message SolicitudDeAgregarPlaylist{
  Token token = 1; 
  string nombre = 2;
}

message SolicitudDeRenombrarPlaylist{
  Token token = 1; 
  string nombre = 2;
  int32 idPlaylist = 3;
}

message SolicitudDeEliminarPlaylist{
  Token token = 1; 
  int32 idPlaylist = 2;
}

message SolicitudDeEliminarCancionDePlaylist{
  Token token = 1; 
  int32 idPlaylist = 2;
  int32 idCancion = 3;
}

message SolicitudDeAgregarCancionAPlaylist{
  Token token = 1; 
  int32 idPlaylist = 2;
  int32 idCancion = 3;
}

message Token {
  string tokenDeAcceso = 1;
}

message PeticionId {
    Token token = 1; 
    int32 idPeticion = 2;
}

message RespuestaDeCanciones {
  Respuesta respuesta = 1;
  repeated Cancion canciones = 2;
}

message RespuestaDeArtista {
  Respuesta respuesta = 1;
  repeated Artista artista = 2;
}

message RespuestaDeAlbum {
  Respuesta respuesta = 1;
  repeated Album Album = 2;
}

message RespuestaDePlaylist{
    Respuesta respuesta = 1; 
    repeated Playlist playlists = 2;
}

message Respuesta{
    bool exitosa = 1;
    int32 motivo = 2;
}

message Artista{
  int32 id = 1; 
  string nombre = 2;
  string descripcion = 3;
}

message Album{
  int32 id = 1; 
  string nombre = 2;
  string descripcion = 3;
  repeated Genero Genero = 4;
  Artista artista = 5;
  bytes imagen = 6;
}

message Cancion {
  int32 id = 1;
  string nombre = 2;
  string duracion = 3; 
  string fechaDeLanzamiento = 4;
  Artista artista = 5;
  Album album = 6;
  bytes imagen = 7;
}

message Playlist{
    int32 id = 1;
    string nombre = 2;
}

message Genero {
    int32 id = 1; 
    string nombre = 2; 
    string descripcion = 3; 
}